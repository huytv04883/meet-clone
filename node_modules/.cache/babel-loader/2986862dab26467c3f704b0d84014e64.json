{"ast":null,"code":"var _jsxFileName = \"/home/it/Desktop/meet-clone/src/context/contextProvider.js\";\nimport React, { createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const context = /*#__PURE__*/createContext();\nconst configuration = {\n  iceServers: [{\n    urls: [\"stun:stun1.l.google.com:19302\", \"stun:stun2.l.google.com:19302\"]\n  }],\n  iceCandidatePoolSize: 10\n};\nlet peerConnection = null;\nlet localStream = null;\nlet remoteStream = null;\nlet roomDialog = null;\nlet roomId = null;\nexport const ContextProvider = props => {\n  const openUserMedia = async (localVideo, remoteVideo) => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    });\n    localVideo.srcObject = stream;\n    localStream = stream;\n    remoteStream = new MediaStream();\n    remoteVideo.srcObject = remoteStream;\n  };\n\n  return /*#__PURE__*/_jsxDEV(context.Provider, {\n    value: {\n      openUserMedia: openUserMedia\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","context","configuration","iceServers","urls","iceCandidatePoolSize","peerConnection","localStream","remoteStream","roomDialog","roomId","ContextProvider","props","openUserMedia","localVideo","remoteVideo","stream","navigator","mediaDevices","getUserMedia","video","audio","srcObject","MediaStream","children"],"sources":["/home/it/Desktop/meet-clone/src/context/contextProvider.js"],"sourcesContent":["import React, { createContext } from \"react\";\nexport const context = createContext();\n\nconst configuration = {\n  iceServers: [\n    {\n      urls: [\"stun:stun1.l.google.com:19302\", \"stun:stun2.l.google.com:19302\"],\n    },\n  ],\n  iceCandidatePoolSize: 10,\n};\n\nlet peerConnection = null;\nlet localStream = null;\nlet remoteStream = null;\nlet roomDialog = null;\nlet roomId = null;\n\nexport const ContextProvider = (props) => {\n  const openUserMedia = async (localVideo, remoteVideo) => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true,\n    });\n    localVideo.srcObject = stream;\n    localStream = stream;\n    remoteStream = new MediaStream();\n    remoteVideo.srcObject = remoteStream;\n  };\n\n  return (\n    <context.Provider value={{ openUserMedia: openUserMedia }}>\n      {props.children}\n    </context.Provider>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;AACA,OAAO,MAAMC,OAAO,gBAAGD,aAAa,EAA7B;AAEP,MAAME,aAAa,GAAG;EACpBC,UAAU,EAAE,CACV;IACEC,IAAI,EAAE,CAAC,+BAAD,EAAkC,+BAAlC;EADR,CADU,CADQ;EAMpBC,oBAAoB,EAAE;AANF,CAAtB;AASA,IAAIC,cAAc,GAAG,IAArB;AACA,IAAIC,WAAW,GAAG,IAAlB;AACA,IAAIC,YAAY,GAAG,IAAnB;AACA,IAAIC,UAAU,GAAG,IAAjB;AACA,IAAIC,MAAM,GAAG,IAAb;AAEA,OAAO,MAAMC,eAAe,GAAIC,KAAD,IAAW;EACxC,MAAMC,aAAa,GAAG,OAAOC,UAAP,EAAmBC,WAAnB,KAAmC;IACvD,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;MACvDC,KAAK,EAAE,IADgD;MAEvDC,KAAK,EAAE;IAFgD,CAApC,CAArB;IAIAP,UAAU,CAACQ,SAAX,GAAuBN,MAAvB;IACAT,WAAW,GAAGS,MAAd;IACAR,YAAY,GAAG,IAAIe,WAAJ,EAAf;IACAR,WAAW,CAACO,SAAZ,GAAwBd,YAAxB;EACD,CATD;;EAWA,oBACE,QAAC,OAAD,CAAS,QAAT;IAAkB,KAAK,EAAE;MAAEK,aAAa,EAAEA;IAAjB,CAAzB;IAAA,UACGD,KAAK,CAACY;EADT;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAjBM;KAAMb,e"},"metadata":{},"sourceType":"module"}